package visao;

import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import produtos.Categoria;
import dao.CategoriaDAO;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.List;

public class ConsultaCategoria extends javax.swing.JFrame {

    private Categoria objcat;
    private List<Integer> listaIds = new ArrayList<>();

    public ConsultaCategoria(String user, String password) {
        initComponents();
        this.objcat = new Categoria(user, password);
        this.carregaTabela();

        // Placeholder
        campoBusca.setText("Buscar categoria...");
        campoBusca.setForeground(Color.GRAY);

        campoBusca.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (campoBusca.getText().equals("Buscar categoria...")) {
                    campoBusca.setText("");
                    campoBusca.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (campoBusca.getText().isEmpty()) {
                    campoBusca.setText("Buscar categoria...");
                    campoBusca.setForeground(Color.GRAY);
                }
            }
        });

        carregaTabela();

        tabelaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCategoriasMouseClicked(evt);
            }
        });
    }
    
    private void carregaTabela() {
        DefaultTableModel modelo = (DefaultTableModel) tabelaCategorias.getModel();
        modelo.setRowCount(0); // limpa a tabela

        listaIds.clear();

        ArrayList<Categoria> minhaLista = objcat.getMinhaListaCategoria();
        for (Categoria cat : minhaLista) {
            modelo.addRow(new Object[]{
                cat.getNome_categoria(), 
                cat.getTamanho(), 
                cat.getEmbalagem()
            });
            listaIds.add(cat.getId_categoria()); // guarda o ID correspondente
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaCategorias = new javax.swing.JTable();
        campoBusca = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        Nome = new javax.swing.JLabel();
        jNome = new javax.swing.JTextField();
        Nome1 = new javax.swing.JLabel();
        jTamanho = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Editar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Cancelar = new javax.swing.JButton();
        jEmbalagem = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consulta de Categorias");

        tabelaCategorias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nome da Categoria", "Tamanho", "Embalagem"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabelaCategorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCategoriasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaCategorias);

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        Nome.setText("Nome da Categoria");

        Nome1.setText("Tamanho");

        jTamanho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "NULL", "Pequeno", "MÃ©dio", "Grande" }));

        jLabel1.setText("Embalagem");

        Editar.setText("Editar");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");
        Excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirActionPerformed(evt);
            }
        });

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Nome)
                        .addGap(371, 371, 371))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Nome1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jNome)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jTamanho, 0, 251, Short.MAX_VALUE)
                                                .addComponent(jEmbalagem)))))
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Editar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Cancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Excluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Nome)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Editar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nome1)
                    .addComponent(jTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Excluir))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(Cancelar)
                    .addComponent(jEmbalagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_CancelarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_BuscarActionPerformed
        String nomeDigitado = campoBusca.getText().trim();

        if (nomeDigitado.isEmpty() || nomeDigitado.equals("Buscar categoria...")) {
            this.carregaTabela();
            return;
        }

        List<Categoria> lista = objcat.buscarPorNome(nomeDigitado);

        DefaultTableModel modelo = (DefaultTableModel) tabelaCategorias.getModel();
        modelo.setRowCount(0);
        listaIds.clear(); // Limpa a lista de IDs atual

        for (Categoria c : lista) {
            modelo.addRow(new Object[] {
                    c.getNome_categoria(),
                    c.getTamanho(),
                    c.getEmbalagem()
            });
            listaIds.add(c.getId_categoria()); // Adiciona o ID Ã  lista
        }
    }// GEN-LAST:event_BuscarActionPerformed

    private void tabelaCategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCategoriasMouseClicked
        if (this.tabelaCategorias.getSelectedRow() != -1) {
            String nome = this.tabelaCategorias.getValueAt(this.tabelaCategorias.getSelectedRow(), 0).toString();
            String tamanho;
            Object tamanhoObj = this.tabelaCategorias.getValueAt(this.tabelaCategorias.getSelectedRow(), 1);
            if (tamanhoObj == null) {
                tamanhoObj = "NULL";
                tamanho = tamanhoObj.toString();
            } else {
                tamanho = tamanhoObj.toString();
            }
            String embalagem = this.tabelaCategorias.getValueAt(this.tabelaCategorias.getSelectedRow(), 2).toString();

            this.jNome.setText(nome);
            this.jTamanho.setSelectedItem(tamanho);
            this.jEmbalagem.setText(embalagem);
        }
    }//GEN-LAST:event_tabelaCategoriasMouseClicked

    private void ExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirActionPerformed
        try {
            int id = 0;
            int linhaSelecionada = this.tabelaCategorias.getSelectedRow();
            if (linhaSelecionada == -1) {
                throw new Exception("Primeiro selecione uma categoria para alterar");
            }
            id = listaIds.get(linhaSelecionada);

            int respostaUsuario = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja apagar esta Categoria?",
                    "ConfirmaÃ§Ã£o",
                    JOptionPane.YES_NO_OPTION
            );

            if (respostaUsuario == JOptionPane.YES_OPTION) {
                if (this.objcat.deleteCategoriaBD(id)) {
                    this.jNome.setText("");
                    this.jTamanho.setSelectedItem(0);
                    this.jEmbalagem.setText("");
                    JOptionPane.showMessageDialog(rootPane, "Categoria Apagada com Sucesso!");
                }
            }
            // atualiza a tabela.
            System.out.println(this.objcat.getMinhaListaCategoria().toString());
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } finally {
            carregaTabela();
        }
    }//GEN-LAST:event_ExcluirActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
        try {
            int id = 0;
            String nome = "";
            String tamanho = "";
            String embalagem = "";

            if (this.jNome.getText().length() < 2) {
                throw new Exception("Nome deve conter ao menos 2 caracteres.");
            } else {
                nome = this.jNome.getText();
            }

                tamanho = this.jTamanho.getSelectedItem().toString();

            if (this.jEmbalagem.getText().length() < 2) {
                throw new Exception("Embalagem deve conter ao menos 2 caracteres.");
            } else {
                embalagem = this.jEmbalagem.getText();
            }
           
            int linhaSelecionada = this.tabelaCategorias.getSelectedRow();
            if (linhaSelecionada == -1) {
                throw new Exception("Primeiro selecione uma categoria para alterar");
            }
            id = listaIds.get(linhaSelecionada);


            // envia os dados para o Aluno processar
            if (this.objcat.updateCategoriaBD(id, nome, tamanho, embalagem)) {
                this.jNome.setText("");
                this.jTamanho.setSelectedItem(0);
                this.jEmbalagem.setText("");
                JOptionPane.showMessageDialog(null, "Categoria Alterada com Sucesso!");
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        } finally {
            // atualiza a tabela.
            carregaTabela();
        }
    }//GEN-LAST:event_EditarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultaCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultaCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultaCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultaCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        String user = JOptionPane.showInputDialog(null, "Digite o nome de usuÃ¡rio do banco de dados:", "Login", JOptionPane.QUESTION_MESSAGE);
        String password = JOptionPane.showInputDialog(null, "Digite a senha do banco de dados:", "Login", JOptionPane.QUESTION_MESSAGE);

        if (user == null || password == null || user.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(null, "UsuÃ¡rio e senha sÃ£o obrigatÃ³rios.", "Erro", JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultaCategoria(user, password).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton Editar;
    private javax.swing.JButton Excluir;
    private javax.swing.JLabel Nome;
    private javax.swing.JLabel Nome1;
    private javax.swing.JTextField campoBusca;
    private javax.swing.JTextField jEmbalagem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jNome;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jTamanho;
    private javax.swing.JTable tabelaCategorias;
    // End of variables declaration//GEN-END:variables
}
